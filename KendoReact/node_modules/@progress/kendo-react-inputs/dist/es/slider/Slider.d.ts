import * as React from 'react';
import * as PropTypes from 'prop-types';
import { FormComponentProps, BaseEvent } from '@progress/kendo-react-common';
/**
 * The arguments for the `onChange` Slider event.
 */
export interface SliderChangeEvent extends BaseEvent<Slider> {
    /**
     * The current value of the Slider.
     */
    value: number;
}
/**
 * Represents the props of the [KendoReact Slider component]({% slug overview_slider %}).
 */
export interface SliderProps extends FormComponentProps {
    /**
     * The value of the Slider.
     */
    value?: number;
    /**
     * The default value of the Slider.
     */
    defaultValue?: number;
    /**
     * The minimum value of the Slider.
     */
    min: number;
    /**
     * The maximum value of the Slider.
     */
    max: number;
    /**
     * Specifies the step of the value increase and decrease.
     */
    step?: number;
    /**
     * Determines the event handler that will be fired when the user edits the value.
     */
    onChange?: (event: SliderChangeEvent) => void;
    /**
     * The styles that are applied to the Slider.
     */
    style?: React.CSSProperties;
    /**
     * Sets additional classes to the Slider.
     */
    className?: string;
    /**
     * Renders the arrow side buttons of the Slider if set to true.
     */
    buttons?: boolean;
    /**
     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)
     * of the Slider.
     */
    tabIndex?: number;
    /**
     * Determines whether the Slider is disabled.
     *
     * @example
     * ```jsx
     * class App extends React.Component {
     *    render() {
     *       return (
     *           <Slider disable={true} min={0} max={10} defaultValue={5} />
     *       );
     *    }
     * }
     * ReactDOM.render(<App />, document.querySelector('my-app'));
     * ```
     */
    disabled?: boolean;
    /**
     * If `vertical` is set to `true`, the orientation of the Slider changes from horizontal to vertical
     * ([see example]({% slug orientation_slider %})).
     */
    vertical?: boolean;
}
/**
 * @hidden
 */
interface SliderState {
    value: number;
    focused: boolean;
}
/**
 * Represents the [KendoReact Slider component]({% slug overview_slider%}).
 */
export declare class Slider extends React.Component<SliderProps, SliderState> {
    /**
     * @hidden
     */
    static propTypes: {
        value: PropTypes.Requireable<any>;
        vertical: PropTypes.Requireable<any>;
    };
    /**
     * @hidden
     */
    static getDerivedStateFromProps(props: SliderProps, _: SliderState): {
        value: number;
    };
    /**
     * @hidden
     */
    state: {
        value: number;
        focused: boolean;
    };
    /**
     * @hidden
     */
    buttons: (props: any) => any;
    /**
     * @hidden
     */
    render(): JSX.Element;
    private isLabel;
    private onFocus;
    private onBlur;
    private onKeyDown;
    private decrement;
    private increment;
    private dragStart;
    private dragOver;
    private drag;
    private change;
}
export {};
