"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var StageEnum_1 = require("./StageEnum");
/**
 * @hidden
 */
var WindowTitleBarComponent = function (_a) {
    var children = _a.children, onCloseButtonClick = _a.onCloseButtonClick, onMinimizeButtonClick = _a.onMinimizeButtonClick, onFullScreenButtonClick = _a.onFullScreenButtonClick, onRestoreButtonClick = _a.onRestoreButtonClick, onDoubleClick = _a.onDoubleClick, stage = _a.stage, forwardedRef = _a.forwardedRef;
    return (React.createElement("div", { className: "k-window-titlebar k-dialog-titlebar k-header", ref: forwardedRef, onDoubleClick: onDoubleClick },
        React.createElement("div", { className: "k-window-title" }, children ? children : ''),
        (stage === StageEnum_1.windowStage.DEFAULT) &&
            React.createElement("button", { className: "k-button-icon k-button k-bare", onClick: onMinimizeButtonClick },
                React.createElement("span", { className: "k-icon k-i-window-minimize", role: "presentation" })),
        (stage === StageEnum_1.windowStage.DEFAULT) &&
            React.createElement("button", { className: "k-button-icon k-button k-bare", onClick: onFullScreenButtonClick },
                React.createElement("span", { className: "k-icon k-i-window-maximize", role: "presentation" })),
        (stage !== StageEnum_1.windowStage.DEFAULT) &&
            React.createElement("button", { className: "k-button-icon k-button k-bare", onClick: onRestoreButtonClick },
                React.createElement("span", { className: "k-icon k-i-window-restore", role: "presentation" })),
        React.createElement("button", { className: "k-button-icon k-button k-bare", onClick: onCloseButtonClick },
            React.createElement("span", { className: "k-icon k-i-close", role: "presentation" }))));
};
/**
 * @hidden
 */
exports.WindowTitleBar = React.forwardRef(function (props, ref) { return (React.createElement(WindowTitleBarComponent, __assign({}, props, { forwardedRef: ref }))); });
//# sourceMappingURL=WindowTitlebar.js.map