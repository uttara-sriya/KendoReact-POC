{"version":3,"sources":["data/appData.js","components/DonutChartContainer.js","components/BarChartContainer.js","components/GridContainer.js","components/PanelBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["donutChartData","foodType","percentSold","barChartQ4Months","barChartMonthlyPercentages","name","data","gridData","ProductID","ProductName","SupplierID","CategoryID","QuantityPerUnit","UnitPrice","UnitsInStock","UnitsOnOrder","ReorderLevel","Discontinued","Category","CategoryName","Description","FirstOrderedOn","Date","panelBarData","teammates","firstName","lastName","position","salesReports","title","labelTemplate","e","category","percentage","DonutChartContainer","react_default","a","createElement","kendo_react_charts_dist_es_main","style","height","type","categoryField","field","padding","color","background","content","visible","BarChartContainer","categories","startAngle","map","item","idx","key","gap","skip","SparkLineChartCell","props","dataItem","PriceHistory","GridContainer","kendo_react_grid_dist_es_main","forEach","Array","from","length","Math","floor","random","width","cell","className","disabled","defaultChecked","PanelBarContainer","kendo_react_layout_dist_es_main","expanded","id","src","imageName","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePDFExport","savePDF","ReactDOM","findDOMNode","appContainer","paperSize","handleShare","setState","showDialog","state","console","log","React","createRef","_this2","kendo_react_ripple_dist_es_main","ref","el","dist_es_main","primary","onClick","PanelBarContainer_PanelBarContainer","DonutChartContainer_DonutChartContainer","BarChartContainer_BarChartContainer","GridContainer_GridContainer","main","onClose","es_main","placeholder","Component","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc95e286.chunk.js","sourcesContent":["export const donutChartData = [\r\n  { 'foodType': 'Beverages', 'percentSold': 16.5 },\r\n  { 'foodType': 'Condiments', 'percentSold': 24 },\r\n  { 'foodType': 'Produce', 'percentSold': 13 },\r\n  { 'foodType': 'Meat/Poultry', 'percentSold': 16.5 },\r\n  { 'foodType': 'Seafood', 'percentSold': 20 },\r\n  { 'foodType': 'Other', 'percentSold': 10 }\r\n];\r\nexport const barChartQ4Months = ['October', 'November', 'December'];\r\nexport const barChartMonthlyPercentages = [\r\n  { name: 'Beverages', data: [14, 16, 19.5] },\r\n  { name: 'Condiments', data: [24, 23.5, 24.5] },\r\n  { name: 'Produce', data: [12.5, 12.5, 14] },\r\n  { name: 'Meat/Poultry', data: [16, 18, 17] },\r\n  { name: 'Seafood', data: [21.5, 20, 17] },\r\n  { name: 'Other', data: [7, 12, 11] },\r\n];\r\nexport const gridData = [\r\n  {\r\n    \"ProductID\": 1,\r\n    \"ProductName\": \"Chai\",\r\n    \"SupplierID\": 1,\r\n    \"CategoryID\": 1,\r\n    \"QuantityPerUnit\": \"10 boxes x 20 bags\",\r\n    \"UnitPrice\": 18,\r\n    \"UnitsInStock\": 39,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 10,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 1,\r\n      \"CategoryName\": \"Beverages\",\r\n      \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 8, 20)\r\n  },\r\n  {\r\n    \"ProductID\": 2,\r\n    \"ProductName\": \"Chang\",\r\n    \"SupplierID\": 1,\r\n    \"CategoryID\": 1,\r\n    \"QuantityPerUnit\": \"24 - 12 oz bottles\",\r\n    \"UnitPrice\": 19,\r\n    \"UnitsInStock\": 17,\r\n    \"UnitsOnOrder\": 40,\r\n    \"ReorderLevel\": 25,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 1,\r\n      \"CategoryName\": \"Beverages\",\r\n      \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 7, 12)\r\n  },\r\n  {\r\n    \"ProductID\": 3,\r\n    \"ProductName\": \"Aniseed Syrup\",\r\n    \"SupplierID\": 1,\r\n    \"CategoryID\": 2,\r\n    \"QuantityPerUnit\": \"12 - 550 ml bottles\",\r\n    \"UnitPrice\": 10,\r\n    \"UnitsInStock\": 13,\r\n    \"UnitsOnOrder\": 70,\r\n    \"ReorderLevel\": 25,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 2,\r\n      \"CategoryName\": \"Condiments\",\r\n      \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 8, 26)\r\n  },\r\n  {\r\n    \"ProductID\": 4,\r\n    \"ProductName\": \"Chef Anton's Cajun Seasoning\",\r\n    \"SupplierID\": 2,\r\n    \"CategoryID\": 2,\r\n    \"QuantityPerUnit\": \"48 - 6 oz jars\",\r\n    \"UnitPrice\": 22,\r\n    \"UnitsInStock\": 53,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 0,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 2,\r\n      \"CategoryName\": \"Condiments\",\r\n      \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 9, 19)\r\n  },\r\n  {\r\n    \"ProductID\": 5,\r\n    \"ProductName\": \"Chef Anton's Gumbo Mix\",\r\n    \"SupplierID\": 2,\r\n    \"CategoryID\": 2,\r\n    \"QuantityPerUnit\": \"36 boxes\",\r\n    \"UnitPrice\": 21.35,\r\n    \"UnitsInStock\": 0,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 0,\r\n    \"Discontinued\": true,\r\n    \"Category\": {\r\n      \"CategoryID\": 2,\r\n      \"CategoryName\": \"Condiments\",\r\n      \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 7, 17)\r\n  },\r\n  {\r\n    \"ProductID\": 6,\r\n    \"ProductName\": \"Grandma's Boysenberry Spread\",\r\n    \"SupplierID\": 3,\r\n    \"CategoryID\": 2,\r\n    \"QuantityPerUnit\": \"12 - 8 oz jars\",\r\n    \"UnitPrice\": 25,\r\n    \"UnitsInStock\": 120,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 25,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 2,\r\n      \"CategoryName\": \"Condiments\",\r\n      \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 9, 19)\r\n  },\r\n  {\r\n    \"ProductID\": 7,\r\n    \"ProductName\": \"Uncle Bob's Organic Dried Pears\",\r\n    \"SupplierID\": 3,\r\n    \"CategoryID\": 7,\r\n    \"QuantityPerUnit\": \"12 - 1 lb pkgs.\",\r\n    \"UnitPrice\": 30,\r\n    \"UnitsInStock\": 15,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 10,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 7,\r\n      \"CategoryName\": \"Produce\",\r\n      \"Description\": \"Dried fruit and bean curd\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 7, 22)\r\n  },\r\n  {\r\n    \"ProductID\": 8,\r\n    \"ProductName\": \"Northwoods Cranberry Sauce\",\r\n    \"SupplierID\": 3,\r\n    \"CategoryID\": 2,\r\n    \"QuantityPerUnit\": \"12 - 12 oz jars\",\r\n    \"UnitPrice\": 40,\r\n    \"UnitsInStock\": 6,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 0,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 2,\r\n      \"CategoryName\": \"Condiments\",\r\n      \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 11, 1)\r\n  },\r\n  {\r\n    \"ProductID\": 9,\r\n    \"ProductName\": \"Mishi Kobe Niku\",\r\n    \"SupplierID\": 4,\r\n    \"CategoryID\": 6,\r\n    \"QuantityPerUnit\": \"18 - 500 g pkgs.\",\r\n    \"UnitPrice\": 97,\r\n    \"UnitsInStock\": 29,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 0,\r\n    \"Discontinued\": true,\r\n    \"Category\": {\r\n      \"CategoryID\": 6,\r\n      \"CategoryName\": \"Meat/Poultry\",\r\n      \"Description\": \"Prepared meats\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1997, 1, 21)\r\n  },\r\n  {\r\n    \"ProductID\": 10,\r\n    \"ProductName\": \"Ikura\",\r\n    \"SupplierID\": 4,\r\n    \"CategoryID\": 8,\r\n    \"QuantityPerUnit\": \"12 - 200 ml jars\",\r\n    \"UnitPrice\": 31,\r\n    \"UnitsInStock\": 31,\r\n    \"UnitsOnOrder\": 0,\r\n    \"ReorderLevel\": 0,\r\n    \"Discontinued\": false,\r\n    \"Category\": {\r\n      \"CategoryID\": 8,\r\n      \"CategoryName\": \"Seafood\",\r\n      \"Description\": \"Seaweed and fish\"\r\n    },\r\n    \"FirstOrderedOn\": new Date(1996, 8, 5)\r\n  }\r\n];\r\nexport const panelBarData = {\r\n  'teammates': [\r\n    {\r\n      firstName: 'Andrew',\r\n      lastName: 'Fuller',\r\n      position: 'Team Lead'\r\n    }, {\r\n      firstName: 'Nancy',\r\n      lastName: 'Leaver',\r\n      position: 'Sales Associate'\r\n    }, {\r\n      firstName: 'Robert',\r\n      lastName: 'King',\r\n      position: 'Business System Analyst'\r\n    }, {\r\n      firstName: 'Laurence',\r\n      lastName: 'Lee',\r\n      position: 'Accounting Manager'\r\n    }, {\r\n      firstName: 'Mary',\r\n      lastName: 'Saveley',\r\n      position: 'Sales Agent'\r\n    }, {\r\n      firstName: 'Hari',\r\n      lastName: 'Kumar',\r\n      position: 'Sales Manager'\r\n    }\r\n  ],\r\n  'salesReports': [\r\n    {\r\n      title: 'Q1 Report',\r\n    }, {\r\n      title: 'Q2 Report',\r\n    }, {\r\n      title: 'Q3 Report',\r\n    }, {\r\n      title: 'Q4 Report',\r\n    }\r\n  ]\r\n}","import React from 'react';\r\nimport 'hammerjs';\r\n\r\nimport {\r\n  Chart,\r\n  ChartLegend,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartSeriesLabels\r\n} from '@progress/kendo-react-charts';\r\n\r\nimport { donutChartData } from '../data/appData';\r\n\r\n/* This function's outputted string determines the label contents */\r\nconst labelTemplate = (e) => (e.category + '\\n'  + (e.percentage*100) +'%');\r\n\r\nexport const DonutChartContainer = () => (\r\n  <Chart style={{ height: 300 }}>\r\n    <ChartSeries>\r\n      <ChartSeriesItem type=\"donut\" data={donutChartData} categoryField=\"foodType\" field=\"percentSold\" padding={0}>\r\n        <ChartSeriesLabels color=\"#fff\" background=\"none\" content={labelTemplate} />\r\n      </ChartSeriesItem>\r\n    </ChartSeries>\r\n    <ChartLegend visible={false} />\r\n  </Chart>\r\n);","import React from 'react';\r\nimport 'hammerjs';\r\n\r\nimport {\r\n  Chart,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartCategoryAxis,\r\n  ChartCategoryAxisItem,\r\n  ChartLegend,\r\n  ChartValueAxis,\r\n  ChartValueAxisItem\r\n} from '@progress/kendo-react-charts';\r\n\r\nimport { barChartQ4Months, barChartMonthlyPercentages } from '../data/appData';\r\n\r\nexport const BarChartContainer = () => (\r\n  <Chart style={{ height: 288 }}>\r\n    <ChartLegend visible={false} />\r\n    <ChartCategoryAxis>\r\n      <ChartCategoryAxisItem categories={barChartQ4Months} startAngle={45} />\r\n    </ChartCategoryAxis>\r\n    <ChartSeries>\r\n      {\r\n        barChartMonthlyPercentages.map((item, idx) => (\r\n          <ChartSeriesItem key={idx} type=\"column\" data={item.data} name={item.name} gap={2}/>\r\n        ))}\r\n    </ChartSeries>\r\n    <ChartValueAxis skip={4}>\r\n      <ChartValueAxisItem color=\"#888\" skip={2} />\r\n    </ChartValueAxis>\r\n  </Chart>\r\n);","import React from 'react';\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { gridData } from '../data/appData';\r\nimport { Sparkline } from '@progress/kendo-react-charts';\r\n\r\nconst SparkLineChartCell = (props) => <td><Sparkline data={props.dataItem.PriceHistory}/></td>\r\nconst processData = (data) => {\r\n  data.forEach((item) => {\r\n    item.PriceHistory = Array.from({ length: 20 }, () => Math.floor(Math.random() * 100));\r\n    return item;\r\n  })\r\n  return data;\r\n}\r\n\r\nexport const GridContainer = () => (\r\n\r\n  <div>\r\n    <Grid style={{ height: '300px' }} data={processData(gridData)}>\r\n      <Column field=\"ProductID\" title=\"ID\" width=\"40px\" />\r\n      <Column field=\"ProductName\" title=\"Name\" width=\"160px\" />\r\n      <Column field=\"Category.CategoryName\" title=\"Category Name\" width=\"80px\" />\r\n      <Column field=\"UnitPrice\" title=\"Price\" width=\"80px\" />\r\n      <Column field=\"UnitsInStock\" title=\"Stock\" width=\"90px\" />\r\n      <Column field=\"PriceHistory\" width=\"130px\" cell={SparkLineChartCell} title=\"Price history\" />\r\n      <Column field=\"Discontinued\" width=\"130px\"\r\n        cell={(props) => (\r\n          <td>\r\n            <input className=\"k-checkbox\" type=\"checkbox\" disabled defaultChecked={props.dataItem[props.field]} />\r\n            <label className=\"k-checkbox-label\"></label>\r\n          </td>\r\n        )} />\r\n    </Grid>\r\n  </div>\r\n);","import React from 'react';\r\nimport { PanelBar, PanelBarItem } from '@progress/kendo-react-layout';\r\nimport { panelBarData } from '../data/appData';\r\n\r\nconst imageUrl = (imageName) => ('img/' + imageName + '.jpg');\r\n\r\nexport const PanelBarContainer = () => (\r\n  <PanelBar >\r\n    <PanelBarItem expanded={true} title=\"My Teammates\">\r\n      <div>\r\n        {panelBarData.teammates.map((item, idx) => (\r\n          <div className={idx === 0 ? 'teammate k-state-selected' : 'teammate'} id={item.firstName + ' ' + item.lastName} key={idx}>\r\n            <img src={imageUrl(item.firstName)} alt={item.firstName + ' ' + item.lastName} />\r\n            <span className=\"mate-info\">\r\n              <h2>{item.firstName + ' ' + item.lastName}</h2>\r\n              <p>{item.position}</p>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PanelBarItem>\r\n    <PanelBarItem title={'Projects'} >\r\n      <PanelBarItem title={'Sales Reports'} >\r\n        {panelBarData.salesReports.map((item, idx) => (\r\n          <PanelBarItem title={item.title} key={idx} />\r\n        ))}\r\n      </PanelBarItem >\r\n    </PanelBarItem>\r\n    <PanelBarItem title=\"Communication\" disabled={true} />\r\n  </PanelBar>\r\n)","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\r\nimport { Input } from '@progress/kendo-react-inputs'; \r\nimport { Button } from '@progress/kendo-react-buttons';\r\nimport { Ripple } from '@progress/kendo-react-ripple';\r\nimport { savePDF } from '@progress/kendo-react-pdf';\r\n\r\nimport { DonutChartContainer } from './components/DonutChartContainer';\r\nimport { BarChartContainer } from './components/BarChartContainer';\r\nimport { GridContainer } from './components/GridContainer';\r\nimport { PanelBarContainer } from './components/PanelBarContainer';\r\n\r\nimport '@progress/kendo-theme-material/dist/all.css';\r\nimport './App.css';\r\nimport 'bootstrap-4-grid/css/grid.min.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.appContainer = React.createRef();\r\n    this.state = {\r\n      showDialog: false\r\n    }\r\n  }\r\n  handlePDFExport = () => {\r\n    savePDF(ReactDOM.findDOMNode(this.appContainer), { paperSize: 'auto' });\r\n  }\r\n  handleShare = () => {\r\n    this.setState({\r\n      showDialog: !this.state.showDialog\r\n    }, () => console.log(this.state))\r\n  }\r\n  render() {\r\n    return (\r\n      <Ripple>\r\n        <div className=\"bootstrap-wrapper\">\r\n          <div className=\"app-container container\" ref={(el) => this.appContainer = el}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6\">\r\n                <h1>Sales | Q4 2018</h1>\r\n              </div>\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6 buttons-right\">\r\n                <Button primary={true} onClick={this.handleShare}>Share</Button>\r\n                <Button onClick={this.handlePDFExport}>Export to PDF</Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3\">\r\n                <PanelBarContainer />\r\n              </div>\r\n              <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-4 col-xl-4\">\r\n                    <DonutChartContainer />\r\n                  </div>\r\n                  <div className=\"col-xs-6 col-sm-6 col-md-2 col-lg-2 col-xl-2\">\r\n                    <div className=\"percentage-container\">\r\n                      <span className=\"percentage-number\">94</span>\r\n                      <span className=\"percentage-sign\">%</span>\r\n                      <p>CUSTOMER SATISFACTION</p>\r\n                    </div>\r\n                    <div className=\"percentage-container\">\r\n                      <span className=\"percentage-number\">89</span>\r\n                      <span className=\"percentage-sign\">%</span>\r\n                      <p>TARGET SALES</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <BarChartContainer />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                    <GridContainer />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.state.showDialog &&\r\n              <Dialog title={\"Share this report\"} onClose={this.handleShare}>\r\n                <p>Please enter the email address/es of the recipient/s.</p>\r\n                <Input placeholder=\"example@progress.com\" />\r\n                <DialogActionsBar>\r\n                  <Button primary={true} onClick={this.handleShare}>Share</Button>\r\n                  <Button onClick={this.handleShare}>Cancel</Button>\r\n                </DialogActionsBar>\r\n              </Dialog>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Ripple>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}